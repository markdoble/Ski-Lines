<div class="article" id="<%=article.date_published%>">
    <div class="col-lg-12 col-md-12 col-sm-12">
      <%= youtube_embed(article.location) %>
    </div>
    <div class="article_text col-lg-12 col-md-12 col-sm-12" >
      <h4 class="article_title"><%= link_to article.title, article_path(article) %></h4>
      <% unless article.description.blank? %>
			<p class="article_description" title="Click to Expand">
		    <%= article.description.html_safe %>
	      </p>
			<% end %>
    </div>
    <div class="comments_row">
			<%= Date.parse(article.date_published).strftime("%b %d, %Y") %> &nbsp|&nbsp
			<i class="glyphicon glyphicon-link"></i>&nbsp<%= link_to article.source, "#{article.location}", :target => "_blank"%>  &nbsp|&nbsp
			<%= link_to article_path(article) do %>
			    <span class="glyphicon glyphicon-comment"></span>Comments (<span class="fb-comments-count" data-href="http://www.ski-lines.com/articles/<%=article.id%>"></span>)
			<% end %>
    </div>
</div>





<script>
      // This loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');
      tag.src = "http://www.youtube.com/player_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // This function creates an <iframe> (and YouTube player) after the API code downloads.
      var player;
      function onYouTubePlayerAPIReady() {
        player = new YT.Player('player', {
          playerVars: { 'autoplay': 1, 'controls': 1,'autohide':1,'wmode':'opaque' },
          videoId: 'JW5meKfy3fY',
          events: {
            'onReady': onPlayerReady}
        });
      }

      // The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.mute();
      }
</script>
